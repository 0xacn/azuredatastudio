steps:
- task: DownloadPipelineArtifact@2
  inputs:
    buildType: 'current'
    targetPath: '$(Agent.TempDirectory)'
    artifactName: drop
    itemPattern: '**/azuredatastudio-win32-x64.zip'

- task: NodeTool@0
  inputs:
    versionSpec: "10.15.1"

- task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@3
  inputs:
    versionSpec: "1.x"

- powershell: |
    . build/azure-pipelines/win32/exec.ps1
    $ErrorActionPreference = "Stop"
    $env:CHILD_CONCURRENCY="1"
    exec { git clean -fxd }
  displayName: Clean repo

- task: ExtractFiles@1 # use this to avoid having to install
  inputs:
    archiveFilePatterns: $(Agent.TempDirectory)\azuredatastudio-win32-x64.zip
    destinationFolder: $(Agent.TempDirectory)\azuredatastudio-win32-x64

- powershell: |
    . build/azure-pipelines/win32/exec.ps1
    $ErrorActionPreference = "Stop"
    $AppRoot = "$(Agent.TempDirectory)\azuredatastudio-win32-x64"
    $AppProductJson = Get-Content -Raw -Path "$AppRoot\resources\app\product.json" | ConvertFrom-Json
    $AppNameShort = $AppProductJson.nameShort
    exec { $env:INTEGRATION_TEST_ELECTRON_PATH = "$AppRoot\$AppNameShort.exe"; .\scripts\sql-test-integration.bat }
  continueOnError: true
  condition: and(succeeded(), eq(variables['RUN_TESTS'], 'true'))
  displayName: Run stable tests

- powershell: |
    . build/azure-pipelines/win32/exec.ps1
    $ErrorActionPreference = "Stop"
    $AppRoot = "$(Agent.TempDirectory)\azuredatastudio-win32-x64"
    $AppProductJson = Get-Content -Raw -Path "$AppRoot\resources\app\product.json" | ConvertFrom-Json
    $AppNameShort = $AppProductJson.nameShort
    exec { $env:INTEGRATION_TEST_ELECTRON_PATH = "$AppRoot\$AppNameShort.exe"; .\scripts\sql-test-integration.bat }
  continueOnError: true
  condition: and(succeeded(), eq(variables['RUN_TESTS'], 'true'))
  displayName: Run release tests
  env:
    ADS_TEST_GREP: (.*@REL@|integration test setup)
    ADS_TEST_INVERT_GREP: 0

- powershell: |
    . build/azure-pipelines/win32/exec.ps1
    $ErrorActionPreference = "Stop"
    $AppRoot = "$(Agent.TempDirectory)\azuredatastudio-win32-x64"
    $AppProductJson = Get-Content -Raw -Path "$AppRoot\resources\app\product.json" | ConvertFrom-Json
    $AppNameShort = $AppProductJson.nameShort
    exec { $env:INTEGRATION_TEST_ELECTRON_PATH = "$AppRoot\$AppNameShort.exe"; .\scripts\sql-test-integration-unstable.bat }
  continueOnError: true
  condition: and(succeeded(), eq(variables['RUN_UNSTABLE_TESTS'], 'true'))
  displayName: Run unstable integration tests
